//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebFormsMEPyD.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectoMEPyDEntities : DbContext
    {
        public ProyectoMEPyDEntities()
            : base("name=ProyectoMEPyDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Compañia> Compañia { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
    
        public virtual int EliminarCompañiaRegistro(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarCompañiaRegistro", idParameter);
        }
    
        public virtual int EliminarEmpleadoRegistro(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarEmpleadoRegistro", idParameter);
        }
    
        public virtual int InsertarEmpleado(string nombre, string apellidos, string codigoEmpleado, string correoEmpleados, string telefonoOficina, string celular, string cargo, string departamento, Nullable<int> idCompañia)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var codigoEmpleadoParameter = codigoEmpleado != null ?
                new ObjectParameter("CodigoEmpleado", codigoEmpleado) :
                new ObjectParameter("CodigoEmpleado", typeof(string));
    
            var correoEmpleadosParameter = correoEmpleados != null ?
                new ObjectParameter("CorreoEmpleados", correoEmpleados) :
                new ObjectParameter("CorreoEmpleados", typeof(string));
    
            var telefonoOficinaParameter = telefonoOficina != null ?
                new ObjectParameter("TelefonoOficina", telefonoOficina) :
                new ObjectParameter("TelefonoOficina", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var idCompañiaParameter = idCompañia.HasValue ?
                new ObjectParameter("IdCompañia", idCompañia) :
                new ObjectParameter("IdCompañia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarEmpleado", nombreParameter, apellidosParameter, codigoEmpleadoParameter, correoEmpleadosParameter, telefonoOficinaParameter, celularParameter, cargoParameter, departamentoParameter, idCompañiaParameter);
        }
    
        public virtual int InsertarEmpresa(string nombreCompañia, string web, string telefono, string codigoPostal, string direcion, string ciudad, string pais, string correo)
        {
            var nombreCompañiaParameter = nombreCompañia != null ?
                new ObjectParameter("NombreCompañia", nombreCompañia) :
                new ObjectParameter("NombreCompañia", typeof(string));
    
            var webParameter = web != null ?
                new ObjectParameter("Web", web) :
                new ObjectParameter("Web", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var direcionParameter = direcion != null ?
                new ObjectParameter("Direcion", direcion) :
                new ObjectParameter("Direcion", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarEmpresa", nombreCompañiaParameter, webParameter, telefonoParameter, codigoPostalParameter, direcionParameter, ciudadParameter, paisParameter, correoParameter);
        }
    
        public virtual int UpdateCompañiaRegistro(Nullable<int> id, string nombreCompañia, string web, string telefono, string codigoPostal, string direcion, string ciudad, string pais, string correo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreCompañiaParameter = nombreCompañia != null ?
                new ObjectParameter("NombreCompañia", nombreCompañia) :
                new ObjectParameter("NombreCompañia", typeof(string));
    
            var webParameter = web != null ?
                new ObjectParameter("Web", web) :
                new ObjectParameter("Web", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var direcionParameter = direcion != null ?
                new ObjectParameter("Direcion", direcion) :
                new ObjectParameter("Direcion", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCompañiaRegistro", idParameter, nombreCompañiaParameter, webParameter, telefonoParameter, codigoPostalParameter, direcionParameter, ciudadParameter, paisParameter, correoParameter);
        }
    
        public virtual int UpdateEmpleadoRegistro(Nullable<int> id, string nombre, string apellidos, string codigoEmpleado, string correoEmpleados, string telefonoOficina, string celular, string cargo, string departamento, Nullable<int> idCompañia)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var codigoEmpleadoParameter = codigoEmpleado != null ?
                new ObjectParameter("CodigoEmpleado", codigoEmpleado) :
                new ObjectParameter("CodigoEmpleado", typeof(string));
    
            var correoEmpleadosParameter = correoEmpleados != null ?
                new ObjectParameter("CorreoEmpleados", correoEmpleados) :
                new ObjectParameter("CorreoEmpleados", typeof(string));
    
            var telefonoOficinaParameter = telefonoOficina != null ?
                new ObjectParameter("TelefonoOficina", telefonoOficina) :
                new ObjectParameter("TelefonoOficina", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var idCompañiaParameter = idCompañia.HasValue ?
                new ObjectParameter("idCompañia", idCompañia) :
                new ObjectParameter("idCompañia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmpleadoRegistro", idParameter, nombreParameter, apellidosParameter, codigoEmpleadoParameter, correoEmpleadosParameter, telefonoOficinaParameter, celularParameter, cargoParameter, departamentoParameter, idCompañiaParameter);
        }
    
        public virtual ObjectResult<string> verCompañiaRegistro()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("verCompañiaRegistro");
        }
    
        public virtual ObjectResult<verEmpledoCompañiaRegistro_Result> verEmpledoCompañiaRegistro()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verEmpledoCompañiaRegistro_Result>("verEmpledoCompañiaRegistro");
        }
    
        public virtual ObjectResult<BuscarCompañia_Result> BuscarCompañia()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarCompañia_Result>("BuscarCompañia");
        }
    }
}
